{"version":3,"file":"component---src-pages-check-jsx-67451e45d845815ac956.js","mappings":"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","sources":["webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/button/button-context.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/button/button-icon.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/button/button-spinner.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/button/button.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/button/use-button-type.mjs","webpack://forwarddomain-net/./src/pages/check.jsx","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-hooks-virtual-f0ea6f24d2/4/.yarn/berry/cache/@chakra-ui-hooks-npm-2.3.1-dd1dacf688-10c0.zip/node_modules/@chakra-ui/hooks/dist/esm/use-merge-refs.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/form-control/form-control.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/form-control/use-form-control.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-react-virtual-7c36f6d709/4/.yarn/berry/cache/@chakra-ui-react-npm-2.9.1-128ecda727-10c0.zip/node_modules/@chakra-ui/react/dist/esm/input/input.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-utils-virtual-75b4ef6f44/4/.yarn/berry/cache/@chakra-ui-utils-npm-2.1.1-d7f2919fb0-10c0.zip/node_modules/@chakra-ui/utils/dist/esm/attr.mjs","webpack://forwarddomain-net/./.yarn/__virtual__/@chakra-ui-utils-virtual-75b4ef6f44/4/.yarn/berry/cache/@chakra-ui-utils-npm-2.1.1-d7f2919fb0-10c0.zip/node_modules/@chakra-ui/utils/dist/esm/call-all.mjs"],"sourcesContent":["'use client';\nimport { createContext } from '@chakra-ui/utils/context';\n\nconst [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport { ButtonGroupProvider, useButtonGroup };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils/cx';\nimport { isValidElement, cloneElement } from 'react';\nimport { chakra } from '../system/factory.mjs';\n\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport { ButtonIcon };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils/cx';\nimport { useMemo } from 'react';\nimport { Spinner } from '../spinner/spinner.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => defineStyle({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport { ButtonSpinner };\n","'use client';\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@chakra-ui/hooks/use-merge-refs';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { dataAttr } from '@chakra-ui/utils/attr';\nimport { cx } from '@chakra-ui/utils/cx';\nimport { useMemo } from 'react';\nimport { useButtonGroup } from './button-context.mjs';\nimport { ButtonIcon } from './button-icon.mjs';\nimport { ButtonSpinner } from './button-spinner.mjs';\nimport { useButtonType } from './use-button-type.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group?.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles?.[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      disabled: isDisabled || isLoading,\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type ?? defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport { Button };\n","'use client';\nimport { useState, useCallback } from 'react';\n\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport { useButtonType };\n","import * as React from \"react\";\nimport { Box, ChakraProvider, Heading, Input, Button, Checkbox } from \"@chakra-ui/react\";\nimport { Helmet } from \"react-helmet\";\nimport ReactSEOMetaTags from \"react-seo-meta-tags\";\nimport favicon from '../images/favicon.svg';\nimport metaimg from '../images/image.png';\nimport gatsbyConfig from \"../../gatsby-config\";\n\nconst isBrowser = typeof window !== \"undefined\"\n\n// markup\nconst IndexPage = () => {\n    const [domain, setDomain] = React.useState(isBrowser ? new URL(window.location.href).searchParams.get('domain') || '' : '');\n    const [dnsState, setDnsState] = React.useState(null);\n\n    React.useEffect(() => {\n        const url = new URL(window.location.href);\n        url.searchParams.set('domain', domain);\n        window.history.pushState({}, '', url);\n    }, [domain])\n\n    async function check() {\n        const dom = domain;\n        var txt1 = await (await fetch(`https://dns.google/resolve?name=_.${dom}&type=TXT`)).json();\n        var txt2 = await (await fetch(`https://dns.google/resolve?name=fwd.${dom}&type=TXT`)).json();\n        var a = await (await fetch(`https://dns.google/resolve?name=${dom}&type=A`)).json();\n        const txt = txt1.Answer?.[0]?.data || txt2.Answer?.[0]?.data || '';\n        const ip = a.Answer?.find(x => (x?.data + '').match(/^[\\d.]+$/))?.data;\n        const dnsstate = {\n            dom, txt, ip, txtPrefix: txt2.Answer?.[0]?.data == txt ? 'fwd.' : '_.',\n            raw: { txt1, txt2, a }\n        }\n        console.log(dnsstate);\n        setDnsState(dnsstate);\n    }\n    return (\n        <ChakraProvider>\n            <ReactSEOMetaTags\n                render={(el) => <Helmet>{el}<link rel=\"icon\" href={favicon} /></Helmet>}\n                website={{\n                    url: 'https://forwarddomain.net/blacklisted',\n                    title: 'Purge Cache | ForwardDomain.net',\n                    language: 'en-US',\n                    description: 'Purge Our Cache',\n                    image: gatsbyConfig.siteMetadata.siteUrl + metaimg,\n                    author: {\n                        email: 'willnode@wellosoft.net',\n                        name: 'Wildan M',\n                    },\n                }}\n            />\n            <Box as=\"main\" p={5} textAlign=\"center\" maxWidth=\"1000px\" mx=\"auto\">\n                <Box>\n                    <Heading as=\"h1\" my={5}>\n                        ForwardDomain.net 📦\n                    </Heading>\n                    <Box my={5}>\n                        Doesn't Working? Diagose with our Check and Purge Tool\n                    </Box>\n                </Box>\n                <Box>\n                    <form action=\"https://r.forwarddomain.net/flushcache\" method=\"POST\" encType=\"application/x-www-form-urlencoded\">\n                        <Heading as=\"h3\" size='md' my={5}>\n                            Step 1: Enter Your Domain 👇\n                        </Heading>\n                        <Box my={5}>\n                            <Input textAlign=\"center\" autocompletion=\"off\" name=\"domain\" placeholder=\"Enter Domain\" required value={domain} onChange={e => setDomain(e.currentTarget.value)} />\n                        </Box>\n\n                        <Heading as=\"h3\" size='md' my={5}>\n                            Step 2: Check if Google DNS Picked Your TXT and CNAME records 👇\n                        </Heading>\n\n                        <Button onClick={check} isDisabled={!domain}>Check DNS</Button>\n                        {dnsState && (<Box textAlign=\"left\" width=\"fit-content\" mx=\"auto\" my={5}>\n                            Domain Checked: <b>{dnsState?.dom}</b>  <br />\n                            TXT Data {(dnsState?.txt + '').includes('forward-domain=') ? '✅' : '❌'}:   <b>{dnsState.txt}</b>  <br />\n                            IP Address {dnsState?.ip == '167.172.5.31' ? '✅' : '❌'}: <b>{dnsState.ip}</b>  <br />\n                            {(dnsState?.txt + '').includes('forward-domain=') && dnsState?.ip == '167.172.5.31' ? (\n                                <p>Your DNS seems fine 🥳 URL redirect not correct? Fix it and <a href=\"https://dns.google/cache\" target=\"_blank\">Flush DNS Google</a> </p>\n                            ) : (\n                                <p>I think your DNS is incorrect 😢 Please fix it and <a href=\"https://dns.google/cache\" target=\"_blank\">Flush DNS Google</a> </p>\n                            )}\n                        </Box>)}\n\n                        <Heading as=\"h3\" size='md' my={5}>\n                            Step 3: Try our Service Now 👇\n                        </Heading>\n\n                        <Box my={5}>\n                            👉<a href={`https://${domain}`} target=\"_blank\">Open {domain}</a>👈 <br />\n                        </Box>\n\n                        <Button type=\"submit\" my={5}>Incorrect? Try Flush Our Cache</Button>\n\n                    </form>\n                </Box>\n                <hr />\n                <Box>\n                    <Heading fontSize={\"1.5em\"} as=\"h2\" my={5}>\n                        Wait! What is this? 👀\n                    </Heading>\n                    <Box my={5}>\n                        <a href=\"/\"><u>forwarddomain.net</u></a> is a free service to redirect domains.\n                    </Box>\n                    <Box my={5}>\n                        If you have a domain on the internet, you can try our service, it's completely free and super simple to use.\n                    </Box>\n                </Box>\n            </Box>\n        </ChakraProvider>\n    )\n}\n\nexport default IndexPage\n","'use client';\nimport { useMemo } from 'react';\n\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\n\nexport { assignRef, mergeRefs, useMergeRefs };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeRefs } from '@chakra-ui/hooks/use-merge-refs';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { dataAttr } from '@chakra-ui/utils/attr';\nimport { createContext } from '@chakra-ui/utils/context';\nimport { cx } from '@chakra-ui/utils/cx';\nimport { useId, useState, useCallback } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nconst [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly)\n    }),\n    [htmlProps, isDisabled, isFocused, isInvalid, isReadOnly]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nconst FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nconst FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field?.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport { FormControl, FormHelperText, useFormControlContext, useFormControlStyles };\n","'use client';\nimport { ariaAttr } from '@chakra-ui/utils/attr';\nimport { callAllHandlers } from '@chakra-ui/utils/call-all';\nimport { useFormControlContext } from './form-control.mjs';\n\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur)\n  };\n}\n\nexport { useFormControl, useFormControlProps };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils/cx';\nimport { useFormControl } from '../form-control/use-form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Input = forwardRef(\n  function Input2(props, ref) {\n    const { htmlSize, ...rest } = props;\n    const styles = useMultiStyleConfig(\"Input\", rest);\n    const ownProps = omitThemingProps(rest);\n    const input = useFormControl(ownProps);\n    const _className = cx(\"chakra-input\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.input,\n      {\n        size: htmlSize,\n        ...input,\n        __css: styles.field,\n        ref,\n        className: _className\n      }\n    );\n  }\n);\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport { Input };\n","const dataAttr = (condition) => condition ? \"\" : void 0;\nconst ariaAttr = (condition) => condition ? true : void 0;\n\nexport { ariaAttr, dataAttr };\n","function callAll(...fns) {\n  return function mergedFn(...args) {\n    fns.forEach((fn) => fn?.(...args));\n  };\n}\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn?.(event);\n      return event?.defaultPrevented;\n    });\n  };\n}\n\nexport { callAll, callAllHandlers };\n"],"names":["ButtonGroupProvider","useButtonGroup","strict","name","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","span","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","spacing","color","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","fontSize","lineHeight","div","Button","ref","group","styles","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_ref","defaultType","value","isButton","setIsButton","useState","useCallback","node","tagName","useButtonType","contentProps","jsxs","button","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","isBrowser","window","IndexPage","domain","setDomain","React","URL","location","href","searchParams","get","dnsState","setDnsState","url","set","history","pushState","ChakraProvider","ReactSEOMetaTags","render","el","Helmet","rel","favicon","website","title","language","description","image","gatsbyConfig","siteUrl","metaimg","author","email","Box","p","textAlign","maxWidth","mx","Heading","my","action","method","encType","size","Input","autocompletion","placeholder","required","onChange","e","currentTarget","onClick","async","_txt1$Answer","_txt1$Answer$","_txt2$Answer","_txt2$Answer$","_a$Answer","_a$Answer$find","_txt2$Answer2","_txt2$Answer2$","dom","txt1","fetch","json","txt2","a","txt","Answer","data","dnsstate","ip","find","x","match","txtPrefix","raw","console","log","includes","target","mergeRefs","refs","forEach","current","error","Error","assignRef","useMergeRefs","FormControlStylesProvider","useFormControlStyles","errorMessage","FormControlProvider","useFormControlContext","FormControl","ownProps","getRootProps","htmlProps","_","context","id","idProp","isRequired","isInvalid","isReadOnly","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","props2","forwardedRef","getLabelProps","htmlFor","getErrorMessageProps","role","getRequiredIndicatorProps","onFocus","onBlur","useFormControlProvider","useFormControl","useFormControlProps","readOnly","field","labelIds","push","join","helperText","htmlSize","input","dataAttr","condition","ariaAttr","callAll","fns","args","fn","callAllHandlers","event","some","defaultPrevented"],"sourceRoot":""}